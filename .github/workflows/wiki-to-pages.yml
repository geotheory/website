name: Build and Deploy Wiki Site

on:
  schedule:
    - cron: "0 3 * * *"  # every day at 03:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout site repo
        uses: actions/checkout@v4

      - name: Read Zola version
        id: zola
        run: echo "ZOLA_VERSION=$(cat ZOLA_VERSION)" >> $GITHUB_ENV

      - name: Install Zola
        run: |
          wget https://github.com/getzola/zola/releases/download/v${ZOLA_VERSION}/zola-v${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz
          tar -xzf zola-v${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz
          sudo mv zola /usr/local/bin/

      - name: Clone wiki
        run: |
          git clone https://github.com/${{ github.repository }}.wiki.git wiki

      - name: Sync wiki into Zola content
        run: |
          rm -rf content
          mkdir content
          cp -r wiki/* content/
          if [ -f content/Home.md ]; then mv content/Home.md content/_index.md; fi

      - name: Format headers
        run: |
          # Iterate over all .md files in content/ recursively
          find content/ -type f -name "*.md" | while read -r file; do
          # Skip files that already have front matter
          if ! head -n 1 "$file" | grep -qE '^\+\+\+|^---'; then
              # Derive title from filename (strip path and extension)
              filename=$(basename "$file" .md)
              title=$filename #"${filename//_/ }"  # replace underscores with spaces if desired

              # Prepend TOML front matter
              tmp=$(mktemp)
              {
                  echo "+++"
                  echo "title = \"$title\""
                  echo "+++"
                  echo ""
                  cat "$file"
              } > "$tmp"
              mv "$tmp" "$file"
          fi
          done

      - name: Build site
        run: zola build

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
